{"name":"gl-oo-interface","tagline":"OpenGL Objected-Oriented Interface provides classes and functionalities to use OpenGL 4.0 with custom shaders and GLUT.","body":"### Welcome gl-oo-interface\r\n\r\nThis multi-platform library provides classes for creating and rendering meshes using the shader-based OpenGL 4.0.\r\nIt is currently under development. I started implementing to help with my projects during Computer Graphics course at USC. Check out two applications here.\r\n\r\nIt includes:\r\n* Mesh: geometric data which is uploaded to GPU;\r\n* Texture: images loaded from .jpeg files that are settable to shaders;\r\n* Material: defines colorful materials according to Phong shading model;\r\n* SceneObject: encapsulates mesh, texture and material for rendering according to its position, orientation and lighting;\r\n* Camera: implemented to use as first-person view camera, editor-camera or objected-reference camera;\r\n* Light: created accordingly to Phong shading model;\r\n* Scene: makes possible displaying multiple objects, lights, camera and changing current cameras.\r\n* Basic Object Library: has many primitive objects such as rgb-axis, grid, textured spheres, textured terrain (optionally with heightmap loader) to render with small number of calls.\r\n* Video Recorder: records and takes screenshots during program execution;\r\n* GlutProgram: an abstract class which has an interface for general GLUT programs (keyboard, mouse).\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}